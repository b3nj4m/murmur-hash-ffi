# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libmurmur
DEFS_Debug := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Debug := \
	-I/home/ben/.node-gyp/2.0.1/src \
	-I/home/ben/.node-gyp/2.0.1/deps/uv/include \
	-I/home/ben/.node-gyp/2.0.1/deps/v8/include

DEFS_Release := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Release := \
	-I/home/ben/.node-gyp/2.0.1/src \
	-I/home/ben/.node-gyp/2.0.1/deps/uv/include \
	-I/home/ben/.node-gyp/2.0.1/deps/v8/include

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)


### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/murmur.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/murmur.node: LIBS := $(LIBS)
$(obj).target/murmur.node: TOOLSET := $(TOOLSET)
$(obj).target/murmur.node:  FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/murmur.node
# Add target alias
.PHONY: libmurmur
libmurmur: $(builddir)/murmur.node

# Copy this to the executable output path.
$(builddir)/murmur.node: TOOLSET := $(TOOLSET)
$(builddir)/murmur.node: $(obj).target/murmur.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/murmur.node
# Short alias for building this executable.
.PHONY: murmur.node
murmur.node: $(obj).target/murmur.node $(builddir)/murmur.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/murmur.node

